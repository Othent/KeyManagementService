import { expect, test, mock } from "bun:test";
import { verifyMessage } from "../src/lib/mapping/verifyMessage";
import { signMessage } from "../src/lib/mapping/signMessage";
import { getActivePublicKey } from "../src/lib/mapping/getActivePublicKey";

test("verifyMessage function", async () => {
  // mock localStorage
  global.localStorage = {
    getItem: (key: string) =>
      key === "id_token"
        ? "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlR0TU13TEllaUlDc0YtcF9SbWFidCJ9.eyJvd25lciI6IjFwUmhKa0NabFl2SVNZbjg5a29mRHlrSDQ4NVcxNmJIcWFNMGNYMmJLSURqMzBya3ZIeV9PM2tDdHQwZEtsLUZKdDI2ZVoycWVOWEFkQTk4dzhfY3dEUVZ2RVNzRjVXWUItc0txa25TeWJtNm80cjVFdmtkcUlBRlY5X29YQlJLUlpJYnVCUjY5dnJoX3Zya1NxVWdzMWRGNktOd0twMVo0QXMzYURfbFJEbEFpaTJleTFzTTJFMUlkY1Atb3NhTVJQeXRqRUdGM2I5V08yRUZsMUNtbXUtSVpNbXNJWnRTdHh0Vmh0bW5zT19VXzhSNGZYUFAtMFJrWGtFT201bVpIMkJ4SXB1Uk1CNlJTelQ3aUdvaXlMSkhfMlZvd0tpdnE4bHQxT1hVemIwZVJZZk1xTG1QcEVRQ2ljOHZpTFZ6NHctLXFFZjNoeEVwOGgtV1hzQzJoblhiOUVSYzlIWjZuWmFtSXlNRTBTQWVyWmJ0S0FhSDhmeUdGWXJjcjNwZjIzamtwZEFmZThUb0ltNEtPYmtldlpyX3J0cjhPWER3VlJPQVVoYzMxRHN6Z0x0a2JVeXVQQllMNjZfbE96b1JZY3pRYXpmYVlXVkwyTjI3ZlNvNmdfQU5wbWtpSkFDNktKVkhFYWVmLXZXZXhCN0FFSTdnNnh6cWtLVVdtQmc4V2szSWZaOWlYTV9hdy1iRFd6MkhLSDBQU21HYVM2b1dmVDlYQ3ZLb1V5TTNlaUJuM1U5MnhXejBtaDhfZnhrckRaMWhZelpZWjllQlhFdktCVWdmTTlWT0dQTFU0V0JBV2hTRXZSMHc5U3QxTE16bWE5YkZGWDVyM0sxLTRhejctYW5QLU5Dd3JQOE5zaWozeTljZERBal9vUWNpTXVjT2NlQ0QtYWxBVXRjIiwid2FsbGV0QWRkcmVzcyI6IkpyV1J4dkpZeEUzQkFVRDZqa0RKVnE5MzlranI5elRYR3A5SXhrSUdfVUEiLCJhdXRoU3lzdGVtIjoiS01TIiwiZ2l2ZW5fbmFtZSI6IkxvcmltZXIiLCJmYW1pbHlfbmFtZSI6IkplbmtpbnMiLCJuaWNrbmFtZSI6ImxvcmltZXJqZW5raW5zMSIsIm5hbWUiOiJMb3JpbWVyIEplbmtpbnMiLCJwaWN0dXJlIjoiaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSW92Y0NxTFRldFJkRWR6RlRPMlNkeDI2ZEkybHE4RmpaWnNWT1g5SUJ4TGVNPXM5Ni1jIiwibG9jYWxlIjoiZW4iLCJ1cGRhdGVkX2F0IjoiMjAyNC0wMS0wOFQxMTo0Mjo1NC4zNjdaIiwiZW1haWwiOiJsb3JpbWVyamVua2luczFAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImlzcyI6Imh0dHBzOi8vYXV0aC5vdGhlbnQuaW8vIiwiYXVkIjoidVhrUm1Kb0lhME5mellnWUVEQWdqNlJzczR3UjF0SWMiLCJpYXQiOjE3MDQ3MTQxNzcsImV4cCI6MTcwNDc1MDE3Nywic3ViIjoiZ29vZ2xlLW9hdXRoMnwxMTMzNzgyMTY4NzYyMTYzNDYwMTYiLCJzaWQiOiI4R29oanBKUXdDd3YwSE1xajB0WlJSa2hpNFhSVkpLWiIsIm5vbmNlIjoiTjI1SFRuaEJVbVpoVlVoQlpsa3lVbll6TVd0Wk1YVXVORlpzT1VRMGIyWjFVbGgrZVY5eWJHZHZNdz09In0.G-CXp63zr_dlTt-4UqGNoGKC-BBz6hQ1U7pUB4o3N54QuS5VIfuRdirneqpF12M23SLncdHLWColWBLJ1svamDIhHGAjMP6IxoMppjbJLy4GGrm9oCXyJ24K0OCKm58nVqq4jWFOfGRamnElzfx14A4bCb83liVHT4rDmUspbaNbHs0Wo_VQHR1fbbG0MfArk20-_Ig2I7EN9gpoUQRgI2Q6uEdeqR5DMJ3XSDAdlHAupA2_NqTCZdGXCiwPGxArjCI3pnYxr9M-JX0oyUK6GQvyzUXgyUdocVDm0XKmzOEeaXh7eJJmkOHXkyMLWv3qiTNEYlPSgzCGcwCdcsHscw"
        : null,
  };
  // mock auth0 functions
  mock.module("../src/lib/auth/auth0", () => {
    return {
      getAuth0Client: () => Promise.resolve(null),
      getTokenSilently: () =>
        Promise.resolve({
          accessToken: {
            id_token:
              "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlR0TU13TEllaUlDc0YtcF9SbWFidCJ9.eyJkYXRhIjp7ImRhdGEiOnsiMCI6MjUyLCIxIjo2MywiMiI6MTk0LCIzIjoxNDgsIjQiOjEwMiwiNSI6MzYsIjYiOjIzOSwiNyI6MTY0LCI4Ijo5OCwiOSI6MTQ5LCIxMCI6MTAzLCIxMSI6MTg3LCIxMiI6MTk1LCIxMyI6MTY2LCIxNCI6NCwiMTUiOjE0LCIxNiI6MTUxLCIxNyI6NjYsIjE4IjoxOTksIjE5IjoxNTEsIjIwIjoxMDcsIjIxIjoxMTIsIjIyIjoyMjksIjIzIjo4OSwiMjQiOjQzLCIyNSI6MTY2LCIyNiI6MjA1LCIyNyI6MjQ2LCIyOCI6MTY5LCIyOSI6MTYwLCIzMCI6NjQsIjMxIjoxNCwiMzIiOjE2OCwiMzMiOjIzOCwiMzQiOjkwLCIzNSI6NzUsIjM2IjoxMSwiMzciOjE5OSwiMzgiOjExOSwiMzkiOjE2MiwiNDAiOjE4MiwiNDEiOjEzNCwiNDIiOjI0NiwiNDMiOjc2LCI0NCI6MTQxLCI0NSI6MTcxLCI0NiI6MjI1LCI0NyI6MjQ2fSwia2V5TmFtZSI6Imdvb2dsZS1vYXV0aDJ8MTEzMzc4MjE2ODc2MjE2MzQ2MDE2In0sIm93bmVyIjoiMXBSaEprQ1psWXZJU1luODlrb2ZEeWtINDg1VzE2YkhxYU0wY1gyYktJRGozMHJrdkh5X08za0N0dDBkS2wtRkp0MjZlWjJxZU5YQWRBOTh3OF9jd0RRVnZFU3NGNVdZQi1zS3FrblN5Ym02bzRyNUV2a2RxSUFGVjlfb1hCUktSWklidUJSNjl2cmhfdnJrU3FVZ3MxZEY2S053S3AxWjRBczNhRF9sUkRsQWlpMmV5MXNNMkUxSWRjUC1vc2FNUlB5dGpFR0YzYjlXTzJFRmwxQ21tdS1JWk1tc0ladFN0eHRWaHRtbnNPX1VfOFI0ZlhQUC0wUmtYa0VPbTVtWkgyQnhJcHVSTUI2UlN6VDdpR29peUxKSF8yVm93S2l2cThsdDFPWFV6YjBlUllmTXFMbVBwRVFDaWM4dmlMVno0dy0tcUVmM2h4RXA4aC1XWHNDMmhuWGI5RVJjOUhaNm5aYW1JeU1FMFNBZXJaYnRLQWFIOGZ5R0ZZcmNyM3BmMjNqa3BkQWZlOFRvSW00S09ia2V2WnJfcnRyOE9YRHdWUk9BVWhjMzFEc3pnTHRrYlV5dVBCWUw2Nl9sT3pvUlljelFhemZhWVdWTDJOMjdmU282Z19BTnBta2lKQUM2S0pWSEVhZWYtdldleEI3QUVJN2c2eHpxa0tVV21CZzhXazNJZlo5aVhNX2F3LWJEV3oySEtIMFBTbUdhUzZvV2ZUOVhDdktvVXlNM2VpQm4zVTkyeFd6MG1oOF9meGtyRFoxaFl6WllaOWVCWEV2S0JVZ2ZNOVZPR1BMVTRXQkFXaFNFdlIwdzlTdDFMTXptYTliRkZYNXIzSzEtNGF6Ny1hblAtTkN3clA4TnNpajN5OWNkREFqX29RY2lNdWNPY2VDRC1hbEFVdGMiLCJ3YWxsZXRBZGRyZXNzIjoiSnJXUnh2Sll4RTNCQVVENmprREpWcTkzOWtqcjl6VFhHcDlJeGtJR19VQSIsImF1dGhTeXN0ZW0iOiJLTVMiLCJnaXZlbl9uYW1lIjoiTG9yaW1lciIsImZhbWlseV9uYW1lIjoiSmVua2lucyIsIm5pY2tuYW1lIjoibG9yaW1lcmplbmtpbnMxIiwibmFtZSI6IkxvcmltZXIgSmVua2lucyIsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NJb3ZjQ3FMVGV0UmRFZHpGVE8yU2R4MjZkSTJscThGalpac1ZPWDlJQnhMZU09czk2LWMiLCJsb2NhbGUiOiJlbiIsInVwZGF0ZWRfYXQiOiIyMDI0LTAxLTA4VDEyOjIxOjM4LjMyNloiLCJlbWFpbCI6ImxvcmltZXJqZW5raW5zMUBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9hdXRoLm90aGVudC5pby8iLCJhdWQiOiJ1WGtSbUpvSWEwTmZ6WWdZRURBZ2o2UnNzNHdSMXRJYyIsImlhdCI6MTcwNDcxNjYwMiwiZXhwIjoxNzA0NzUyNjAyLCJzdWIiOiJnb29nbGUtb2F1dGgyfDExMzM3ODIxNjg3NjIxNjM0NjAxNiIsInNpZCI6IjcwWk1scFJ0R3RodFY3TVVady1xeURldTk1UUpyQUZuIiwibm9uY2UiOiJRV2RxYTJ4R2JsSjBhSFp2UW1WNFVuWm1abGxuTGtzMGJFMStWV04rZVdFdE5YWnJlbGRUZERFNVdnPT0ifQ.I4kI5dQgKYgaVSkogANOeWO_4M__CfmVcI37PyYQLFpGA5l5vo07mVYuUnHuotdPLaeAKX-Id31NYDbs4Md7Mw1KfKBayV5AzPAYuIjdonVVXLazZCZUNq390SpACh0JsgzXYj9PUnpb4vCH72VYVl_43-2K1gvcu5cVhkKgQXFUXcMm05F13PfW6ZVHJH9BWWRnGrIHr2e0xURAs4MjdY4YkFQR6LKDJ-Ramuw-Ay4LPdT8-vtfMrtGmq21sGayfrPZkGzzNWTg5w1667DTHxTxgJ5Jungdqi2j6NjykF1Ecfv5GqO8jYEFC_s_lqxjVX9oUhzerchNyXMHKuOwtA",
          },
        }),
    };
  });
  mock.module("../src/lib/auth/encodeToken", () => {
    return {
      encodeToken: () =>
        Promise.resolve({
          JWT: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IlR0TU13TEllaUlDc0YtcF9SbWFidCJ9.eyJkYXRhIjp7ImRhdGEiOnsiMCI6MjUyLCIxIjo2MywiMiI6MTk0LCIzIjoxNDgsIjQiOjEwMiwiNSI6MzYsIjYiOjIzOSwiNyI6MTY0LCI4Ijo5OCwiOSI6MTQ5LCIxMCI6MTAzLCIxMSI6MTg3LCIxMiI6MTk1LCIxMyI6MTY2LCIxNCI6NCwiMTUiOjE0LCIxNiI6MTUxLCIxNyI6NjYsIjE4IjoxOTksIjE5IjoxNTEsIjIwIjoxMDcsIjIxIjoxMTIsIjIyIjoyMjksIjIzIjo4OSwiMjQiOjQzLCIyNSI6MTY2LCIyNiI6MjA1LCIyNyI6MjQ2LCIyOCI6MTY5LCIyOSI6MTYwLCIzMCI6NjQsIjMxIjoxNCwiMzIiOjE2OCwiMzMiOjIzOCwiMzQiOjkwLCIzNSI6NzUsIjM2IjoxMSwiMzciOjE5OSwiMzgiOjExOSwiMzkiOjE2MiwiNDAiOjE4MiwiNDEiOjEzNCwiNDIiOjI0NiwiNDMiOjc2LCI0NCI6MTQxLCI0NSI6MTcxLCI0NiI6MjI1LCI0NyI6MjQ2fSwia2V5TmFtZSI6Imdvb2dsZS1vYXV0aDJ8MTEzMzc4MjE2ODc2MjE2MzQ2MDE2In0sIm93bmVyIjoiMXBSaEprQ1psWXZJU1luODlrb2ZEeWtINDg1VzE2YkhxYU0wY1gyYktJRGozMHJrdkh5X08za0N0dDBkS2wtRkp0MjZlWjJxZU5YQWRBOTh3OF9jd0RRVnZFU3NGNVdZQi1zS3FrblN5Ym02bzRyNUV2a2RxSUFGVjlfb1hCUktSWklidUJSNjl2cmhfdnJrU3FVZ3MxZEY2S053S3AxWjRBczNhRF9sUkRsQWlpMmV5MXNNMkUxSWRjUC1vc2FNUlB5dGpFR0YzYjlXTzJFRmwxQ21tdS1JWk1tc0ladFN0eHRWaHRtbnNPX1VfOFI0ZlhQUC0wUmtYa0VPbTVtWkgyQnhJcHVSTUI2UlN6VDdpR29peUxKSF8yVm93S2l2cThsdDFPWFV6YjBlUllmTXFMbVBwRVFDaWM4dmlMVno0dy0tcUVmM2h4RXA4aC1XWHNDMmhuWGI5RVJjOUhaNm5aYW1JeU1FMFNBZXJaYnRLQWFIOGZ5R0ZZcmNyM3BmMjNqa3BkQWZlOFRvSW00S09ia2V2WnJfcnRyOE9YRHdWUk9BVWhjMzFEc3pnTHRrYlV5dVBCWUw2Nl9sT3pvUlljelFhemZhWVdWTDJOMjdmU282Z19BTnBta2lKQUM2S0pWSEVhZWYtdldleEI3QUVJN2c2eHpxa0tVV21CZzhXazNJZlo5aVhNX2F3LWJEV3oySEtIMFBTbUdhUzZvV2ZUOVhDdktvVXlNM2VpQm4zVTkyeFd6MG1oOF9meGtyRFoxaFl6WllaOWVCWEV2S0JVZ2ZNOVZPR1BMVTRXQkFXaFNFdlIwdzlTdDFMTXptYTliRkZYNXIzSzEtNGF6Ny1hblAtTkN3clA4TnNpajN5OWNkREFqX29RY2lNdWNPY2VDRC1hbEFVdGMiLCJ3YWxsZXRBZGRyZXNzIjoiSnJXUnh2Sll4RTNCQVVENmprREpWcTkzOWtqcjl6VFhHcDlJeGtJR19VQSIsImF1dGhTeXN0ZW0iOiJLTVMiLCJnaXZlbl9uYW1lIjoiTG9yaW1lciIsImZhbWlseV9uYW1lIjoiSmVua2lucyIsIm5pY2tuYW1lIjoibG9yaW1lcmplbmtpbnMxIiwibmFtZSI6IkxvcmltZXIgSmVua2lucyIsInBpY3R1cmUiOiJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS9BQ2c4b2NJb3ZjQ3FMVGV0UmRFZHpGVE8yU2R4MjZkSTJscThGalpac1ZPWDlJQnhMZU09czk2LWMiLCJsb2NhbGUiOiJlbiIsInVwZGF0ZWRfYXQiOiIyMDI0LTAxLTA4VDEyOjIxOjM4LjMyNloiLCJlbWFpbCI6ImxvcmltZXJqZW5raW5zMUBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6Ly9hdXRoLm90aGVudC5pby8iLCJhdWQiOiJ1WGtSbUpvSWEwTmZ6WWdZRURBZ2o2UnNzNHdSMXRJYyIsImlhdCI6MTcwNDcxNjYwMiwiZXhwIjoxNzA0NzUyNjAyLCJzdWIiOiJnb29nbGUtb2F1dGgyfDExMzM3ODIxNjg3NjIxNjM0NjAxNiIsInNpZCI6IjcwWk1scFJ0R3RodFY3TVVady1xeURldTk1UUpyQUZuIiwibm9uY2UiOiJRV2RxYTJ4R2JsSjBhSFp2UW1WNFVuWm1abGxuTGtzMGJFMStWV04rZVdFdE5YWnJlbGRUZERFNVdnPT0ifQ.I4kI5dQgKYgaVSkogANOeWO_4M__CfmVcI37PyYQLFpGA5l5vo07mVYuUnHuotdPLaeAKX-Id31NYDbs4Md7Mw1KfKBayV5AzPAYuIjdonVVXLazZCZUNq390SpACh0JsgzXYj9PUnpb4vCH72VYVl_43-2K1gvcu5cVhkKgQXFUXcMm05F13PfW6ZVHJH9BWWRnGrIHr2e0xURAs4MjdY4YkFQR6LKDJ-Ramuw-Ay4LPdT8-vtfMrtGmq21sGayfrPZkGzzNWTg5w1667DTHxTxgJ5Jungdqi2j6NjykF1Ecfv5GqO8jYEFC_s_lqxjVX9oUhzerchNyXMHKuOwtA",
        }),
    };
  });

  const data = new TextEncoder().encode("The hash of this msg will be signed.");
  const signedMessage = await signMessage(data);

  const owner = await getActivePublicKey();

  const result = await verifyMessage(data, signedMessage, owner);

  expect(result).toBe(true);
});
